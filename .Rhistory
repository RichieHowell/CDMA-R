setwd("C:\\\Richie Howell\\Documents\\R Stuffs and things")
setwd("C:\\Richie Howell\\Documents\\R Stuffs and things")
getwd()
setwd("C:\\Richie Howell\\Documents\\R Stuffs and things")
setwd("C:/Richie Howell/Documents/R Stuffs and things")
setwd("C:\\Richie Howell\\Documents\\R Stuffs and things")
3+3
?exp
a <- 3+3
b <- exp(2)
c=2*3
d=(10/4)^2
x <- Y <- 2
?:
vec1=1:10  #the colon operator
vec2=1:-10
vec4=seq(0,5,length=15)
vec3=seq(0,5,by=.5)
length(vec3)
c(1,2,3,4,5)
rep4=rep(c("a","b"),c(5,2))
rep4
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things)
load("Birthdata.Rdata")
load("Birthdata.Rdata")
load("Birthdata.Rdata")
load("Birthdata.Rdata")
#Logistic Regression
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things)
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things);
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things);
load("Birthdata.Rdata");
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things);
#Logistic Regression
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things\\CDMA-R")
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things\\CDMA-R")
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things\\CDMA-R")
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things")
load("Birthdata.Rdata");
head(mydata)
attach(mydata)
RACE_f=factor(RACE)
SMOKE_f=factor(SMOKE)
logit = glm(LOW ~ AGE+LWT+RACE_f+SMOKE_f+PTL+HT+UI+FTV, data = mydata,
summary(logit)
family = "binomial")
logit = glm(LOW ~ AGE+LWT+RACE_f+SMOKE_f+PTL+HT+UI+FTV, data = mydata,
family = "binomial")
summary(logit)
logit$coef
exp(logit$coef)
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things\\CDMA-R")
load("exampleData1.rData")
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things\\CDMA-R")
load("fdata.rData")
View(custdata)
load("fdata.rData")
head(mydata)
load("Birthdata.Rdata");
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things")
load("Birthdata.Rdata");
head(mydata)
attach(mydata)
detach(mydata)
attach(final)
head(final)
firstFive = glm(disorder ~ som1+som2+som3+som4+som5, data = final,
family = "binomial")
summary(firstFive)
exp(firstFive$coef)
summary(secFive)
secFive = glm(disorder ~ som6+som7+som8+som9, data = final,
family = "binomial")
summary(secFive)
secFour = glm(disorder ~ som6+som7+som8+som9, data = final,
family = "binomial")
summary(secFour)
exp(secFour)
exp(secFour$coef)
lastFive = glm(disorder ~ som10+som11+som12+som13+som14, data = final,
family = "binomial")
summary(lastFive)
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things\\CDMA-R")
load("fdata.rData")
final$gp = runif(dim(final)[1])
testSet = subset(custdata, custdata$gp <= .1)
testSet = subset(custdata, custdata$gp > .1)
final$gp = runif(dim(final)[1])
testSet = subset(final, final$gp <= .1)
testSet = subset(final, final$gp > .1)
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things\\CDMA-R")
head(final)
finalFit = lm(scc ~ coder + location + age + gender + ethnicity +
som1 + som2 + som3 + som4 + som4 + som6 + som7 + som8 +
som9 + som10 + som11 + som12 + som13 + som14)
finalFit = lm(ssc ~ coder + location + age + gender + ethnicity +
som1 + som2 + som3 + som4 + som4 + som6 + som7 + som8 +
som9 + som10 + som11 + som12 + som13 + som14)
final$gp = runif(dim(final)[1])
testSet = subset(final, final$gp <= .1)
trainset = subset(final, final$gp > .1)
#fit the linear regression model
finalFit = lm(ssc ~ coder + location + age + gender + ethnicity +
som1 + som2 + som3 + som4 + som4 + som6 + som7 + som8 +
som9 + som10 + som11 + som12 + som13 + som14)
summary(finalFit)
attach(trainset)
finalFit = lm(ssc ~ coder + location + age + gender + ethnicity +
som1 + som2 + som3 + som4 + som4 + som6 + som7 + som8 +
som9 + som10 + som11 + som12 + som13 + som14)
summary(finalFit)
final$ethnicityF = factor(final$ethnicity)
final$locationF = factor(final$location)
final$genderF = factor(final$gender)
final$coderF = factor(final$coder)
#create training and test sets
final$gp = runif(dim(final)[1])
testSet = subset(final, final$gp <= .1)
trainset = subset(final, final$gp > .1)
#fit the linear regression model
attach(trainset)
finalFit = lm(ssc ~ coder + location + age + gender + ethnicity +
som1 + som2 + som3 + som4 + som4 + som6 + som7 + som8 +
som9 + som10 + som11 + som12 + som13 + som14)
summary(finalFit)
final$ethnicityF = factor(final$ethnicity)
final$locationF = factor(final$location)
final$genderF = factor(final$gender)
final$coderF = factor(final$coder)
#create training and test sets
final$gp = runif(dim(final)[1])
testSet = subset(final, final$gp <= .1)
trainset = subset(final, final$gp > .1)
#fit the linear regression model
attach(trainset)
finalFit = lm(ssc ~ coderF + locationF + age + genderF + ethnicityF +
som1 + som2 + som3 + som4 + som4 + som6 + som7 + som8 +
som9 + som10 + som11 + som12 + som13 + som14)
summary(finalFit)
library(MASS)
install.packages("MASS"")
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
library(MASS)
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things\\CDMA-R")
load("fdata.rData")
head(final)
#create training and test sets
final$gp = runif(dim(final)[1])
testSet = subset(final, final$gp <= .1)
trainset = subset(final, final$gp > .1)
#fit the linear regression model
attach(trainset)
finalFit = lm(ssc ~ coderF + locationF + age + genderF + ethnicityF +
som1 + som2 + som3 + som4 + som4 + som6 + som7 + som8 +
som9 + som10 + som11 + som12 + som13 + som14)
finalFit = lm(ssc ~ coder + location + age + gender + ethnicity +
som1 + som2 + som3 + som4 + som4 + som6 + som7 + som8 +
som9 + som10 + som11 + som12 + som13 + som14)
finalStep = stepAIC(finalFit, direction = "both")
finalStep
finalFit2 = lm(ssc ~ coder + location + som1 + som2 + som3 + som4 +
som10 + som11 + som12 + som13 + som14)
summary(finalFit2)
testSet$casualpred = predict(finalFit2, newdata = testSet)
library(ggplot2)
testSet$sscpred = predict(finalFit2, newdata = testSet)
ggplot(data = testSet, aes(x = casualpred, y = ssc)) +
geom_point(color = "red")+
geom_line(aes(x = ssc, y = ssc), color = "blue")
ggplot(data = testSet, aes(x = sscpred, y = ssc)) +
geom_point(color = "red")+
geom_line(aes(x = ssc, y = ssc), color = "blue")
ggplot(data = testSet, aes(x = sscpred, y = ssc)) +
geom_point(color = "red")+
geom_line(aes(x = ssc, y = ssc), color = "blue")
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things\\CDMA-R")
load("NatalRiskData.rData")
load("NatalRiskData.rData")
train = sdata[sdata$origrandGroup <= 5,]
train = sdata[sdata$origrandGroup > 5,]
model = glm(atRisk ~ PWGT + UPREVIS + CIG_REC+GESTRE3+
DPLURAL+ULD_MECO+ULD_PRECIP+ULD_BREECH+URF_DIAB+URF_CHYPER+
URF_PHyPER+URFECLAM, data=train, family = binomail(link = "logit"))
model = glm(atRisk ~ PWGT + UPREVIS + CIG_REC+GESTRE3+
DPLURAL+ULD_MECO+ULD_PRECIP+ULD_BREECH+URF_DIAB+URF_CHYPER+
URF_PHyPER+URFECLAM, data=train, family = binomial(link = "logit")
)
model = glm(atRisk ~ PWGT + UPREVIS + CIG_REC+GESTREC3+
DPLURAL+ULD_MECO+ULD_PRECIP+ULD_BREECH+URF_DIAB+URF_CHYPER+
URF_PHyPER+URFECLAM, data=train,
family = binomial(link = "logit"))
model = glm(atRisk ~ PWGT + UPREVIS + CIG_REC+GESTREC3+
DPLURAL+ULD_MECO+ULD_PRECIP+ULD_BREECH+URF_DIAB+URF_CHYPER+
URF_PHYPER+URFECLAM, data=train,
family = binomial(link = "logit"))
model = glm(atRisk ~ PWGT + UPREVIS + CIG_REC+GESTREC3+
DPLURAL+ULD_MECO+ULD_PRECIP+ULD_BREECH+URF_DIAB+URF_CHYPER+
URF_PHYPER+URF_ECLAM, data=train,
family = binomial(link = "logit"))
model = glm(fmla, data=train, family = binomial(link = "logit"))
complications = c("ULD_MECO","ULD_PRECIP", "ULD_BREECH")
riskfactors = c("URF_DIAB", "URF_CHYPER", "URF_PHYPER", "URF_ECLAM")
y = "atRisk"
x = c("PWGT", "UPREVIS", "CIG_REC", "RESTREC3",
"DPLURAL", complications, riskfactors)
fmla = paste(y, paste(x, collapse="+"), sep="~")
model = glm(fmla, data=train, family = binomial(link = "logit"))
x = c("PWGT", "UPREVIS", "CIG_REC", "GESTREC3",
"DPLURAL", complications, riskfactors)
fmla = paste(y, paste(x, collapse="+"), sep="~")
model = glm(fmla, data=train, family = binomial(link = "logit"))
model = glm(fmla, data=train, family = binomial)
attach(sdata)
model = glm(fmla, family = binomial)
sdata$gp <- runif(dim(sdata)[1])
train <- subset(sdata, sdata$gp > 0.5)
test <- subset(sdata, sdata$gp <= 0.5)
train$pred <- predict(model, newdata = train, type = "response")
library(ggplot2)
ggplot(train, aes(x=pred, color=factor(target), linetype=factor(target))) +  geom_density()
ggplot(train, aes(x=pred)) +  geom_density()
confusion.test <- table(pred=test$pred>0.5)
accuracy <- (confusion.test[2,2] + confusion.test[1,1])/sum(confusion.test[,])
accuracy
precision <- confusion.test[2,2] / sum(confusion.test[2,])
precision
recall <- confusion.test[2,2] / sum(confusion.test[,2])
recall
consusion.test
ggplot(train, aes(x=pred, color=factor(atRisk), linetype=factor(atRisk))) +  geom_density()
confusion.test <- table(pred=test$pred>0.5, target = test$atRisk)
confusion.test <- table(pred=test$pred>0.5, target = test$atRisk)
confusion.test <- table(pred=test$pred>0.5, target = test$atRisk)
install.packages("shiny")
library(shiny)
setwd("C:\\Users\\Richie Howell\\Documents\\R Stuffs and things\\CDMA-R")
